{"version":3,"sources":["components/Loading.js","shared/baseUrl.js","components/Menu.js","components/Home.js","components/About.js","components/Dishdetail.js","components/Header.js","components/Contact.js","components/Footer.js","redux/ActionCreators.js","redux/ActionTypes.js","components/Main.js","redux/dishes.js","redux/comments.js","redux/promotions.js","redux/leaders.js","redux/forms.js","App.js","redux/configureStore.js","serviceWorker.js","index.js"],"names":["Loading","className","baseUrl","Menu","dishes","menu","map","dish","isLoading","errMess","key","id","Breadcrumb","BreadcrumbItem","to","active","RenderMenuItem","Card","CardImg","width","src","image","alt","name","CardImgOverlay","CardTitle","RenderCard","item","console","log","in","transformProps","exitTransform","CardBody","designation","CardSubtitle","CardText","description","Home","props","dishesLoading","dishesErrMess","promotion","promosLoading","promosErrMess","leader","leadersLoading","leadersErrMess","RenderLeader","leaders","Media","left","object","right","body","heading","About","CardHeader","title","required","val","length","maxLength","len","Dishdetail","comments","postComment","dishId","RenderDish","top","RenderComments","comment","author","Intl","DateTimeFormat","year","month","day","format","Date","parse","date","CommentForm","state","isModalOpen","toggleModal","setState","handleSubmit","values","rating","this","Button","outline","onClick","Modal","isOpen","toggle","ModalHeader","ModalBody","onSubmit","Row","Label","htmlFor","md","Col","select","model","text","placeholder","validators","minLength","show","messages","textarea","rows","type","color","React","Component","Header","isNavOpen","toggleNav","handleLogin","event","alert","username","value","password","remember","checked","preventDefault","Navbar","dark","expand","NavbarToggler","NavbarBrand","href","height","Collapse","navbar","Nav","NavItem","Jumbotron","Form","FormGroup","Input","innerRef","input","check","isNumber","isNaN","Number","validEmail","test","Contact","resetFeedbackForm","postFeedback","role","size","offset","checkbox","Footer","dishesFailed","errmess","payload","addDishes","commentsFailed","addComments","dispatch","promosFailed","addPromos","promos","leadersFailed","addLeaders","Leaders","Main","fetchDishes","fetchComments","fetchPromos","fetchLeaders","promotions","TransitionGroup","CSSTransition","location","classNames","timeout","path","component","filter","featured","promo","exact","match","parseInt","params","commentsErrMess","withRouter","connect","newComment","toISOString","fetch","method","JSON","stringify","headers","credentials","then","response","ok","error","Error","status","statusText","json","addComment","catch","message","feedback","newFeedback","Object","assign","errorMessage","actions","reset","Dishes","action","Comments","concat","Promotions","InitialFeedback","firstname","lastname","telnum","email","agree","contactType","store","createStore","combineReducers","createForms","applyMiddleware","thunk","logger","App","Boolean","window","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.afe9131d.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport const Loading = () => {\r\n    return (\r\n        <div className=\"col-12\">\r\n            <span className=\"fa fa-spinner fa-pulse fa-3x fa-fw text-primary\" />\r\n            <p>Loading . . .</p>\r\n        </div>\r\n    );\r\n};\r\n","export const baseUrl = 'https://my-json-server.typicode.com/iahmediibrahim/confusion-json-server';\r\n","import React from 'react';\r\nimport { Card, CardImg, CardImgOverlay, CardTitle, Breadcrumb, BreadcrumbItem } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Loading } from './Loading';\r\nimport { baseUrl } from '../shared/baseUrl';\r\n\r\nconst Menu = ({ dishes }) => {\r\n    const menu = dishes.dishes.map((dish) => {\r\n        if (dishes.isLoading) {\r\n            return (\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <Loading />\r\n                    </div>\r\n                </div>\r\n            );\r\n        } else if (dishes.errMess) {\r\n            return (\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12\">\r\n                            <h4>{dishes.errMess}</h4>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            );\r\n        } else\r\n            return (\r\n                <div key={dish.id} className=\"col-12 col-md-5 m-1\">\r\n                    <RenderMenuItem dish={dish} />\r\n                </div>\r\n            );\r\n    });\r\n\r\n    return (\r\n        <div className=\"row\">\r\n            <Breadcrumb>\r\n                <BreadcrumbItem>\r\n                    <Link to=\"/home\">Home</Link>\r\n                </BreadcrumbItem>\r\n                <BreadcrumbItem active>Menu</BreadcrumbItem>\r\n            </Breadcrumb>\r\n            <div className=\"col-12\">\r\n                <h3>Menu</h3>\r\n                <hr />\r\n            </div>\r\n            {menu}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Menu;\r\n\r\nconst RenderMenuItem = ({ dish }) => {\r\n    return (\r\n        <Card>\r\n            <Link to={`menu/${dish.id}`}>\r\n                <CardImg width=\"100%\" src={baseUrl + dish.image} alt={dish.name} />\r\n                <CardImgOverlay>\r\n                    <CardTitle>{dish.name}</CardTitle>\r\n                </CardImgOverlay>\r\n            </Link>\r\n        </Card>\r\n    );\r\n};\r\n","import React from 'react';\r\nimport { Card, CardImg, CardText, CardBody, CardTitle, CardSubtitle } from 'reactstrap';\r\nimport { Loading } from './Loading';\r\nimport { baseUrl } from '../shared/baseUrl';\r\nimport { FadeTransform } from 'react-animation-components';\r\n\r\nconst RenderCard = ({ item, isLoading, errMess }) => {\r\n    console.log(item, isLoading, errMess);\r\n    if (isLoading) {\r\n        return <Loading />;\r\n    } else if (errMess) {\r\n        return <h4>{errMess}</h4>;\r\n    } else if (item) {\r\n        return (\r\n            <FadeTransform\r\n                in\r\n                transformProps={{\r\n                    exitTransform: 'scale(0.5) translateY(-50%)',\r\n                }}\r\n            >\r\n                <Card>\r\n                    <CardImg src={baseUrl + item.image} alt={item.name} />\r\n                    <CardBody>\r\n                        <CardTitle>{item.name}</CardTitle>\r\n                        {item.designation ? <CardSubtitle>{item.designation}</CardSubtitle> : null}\r\n                        <CardText>{item.description}</CardText>\r\n                    </CardBody>\r\n                </Card>\r\n            </FadeTransform>\r\n        );\r\n    } else {\r\n        return null;\r\n    }\r\n};\r\n\r\nconst Home = (props) => {\r\n    return (\r\n        <div className=\"row align-items-start\">\r\n            <div className=\"col-12 col-md m-1\">\r\n                <RenderCard item={props.dish} isLoading={props.dishesLoading} errMess={props.dishesErrMess} />\r\n            </div>\r\n            <div className=\"col-12 col-md m-1\">\r\n                <RenderCard item={props.promotion} isLoading={props.promosLoading} errMess={props.promosErrMess} />\r\n            </div>\r\n            <div className=\"col-12 col-md m-1\">\r\n                <RenderCard item={props.leader} isLoading={props.leadersLoading} errMess={props.leadersErrMess} />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Home;\r\n","import React from 'react';\r\nimport { Breadcrumb, BreadcrumbItem, Card, CardBody, CardHeader, Media } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { baseUrl } from '../shared/baseUrl';\r\nimport { Fade, Stagger } from 'react-animation-components';\r\n\r\nconst About = ({ leaders }) => {\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <Breadcrumb>\r\n                    <BreadcrumbItem>\r\n                        <Link to=\"/home\">Home</Link>\r\n                    </BreadcrumbItem>\r\n                    <BreadcrumbItem active>About Us</BreadcrumbItem>\r\n                </Breadcrumb>\r\n                <div className=\"col-12\">\r\n                    <h3>About Us</h3>\r\n                    <hr />\r\n                </div>\r\n            </div>\r\n            <div className=\"row row-content\">\r\n                <div className=\"col-12 col-md-6\">\r\n                    <h2>Our History</h2>\r\n                    <p>\r\n                        Started in 2010, Ristorante con Fusion quickly established itself as a culinary icon par\r\n                        excellence in Hong Kong. With its unique brand of world fusion cuisine that can be found nowhere\r\n                        else, it enjoys patronage from the A-list clientele in Hong Kong. Featuring four of the best\r\n                        three-star Michelin chefs in the world, you never know what will arrive on your plate the next\r\n                        time you visit us.\r\n                    </p>\r\n                    <p>\r\n                        The restaurant traces its humble beginnings to <em>The Frying Pan</em>, a successful chain\r\n                        started by our CEO, Mr. Peter Pan, that featured for the first time the world's best cuisines in\r\n                        a pan.\r\n                    </p>\r\n                </div>\r\n                <div className=\"col-12 col-md-5\">\r\n                    <Card>\r\n                        <CardHeader className=\"bg-primary text-white\">Facts At a Glance</CardHeader>\r\n                        <CardBody>\r\n                            <dl className=\"row p-1\">\r\n                                <dt className=\"col-6\">Started</dt>\r\n                                <dd className=\"col-6\">3 Feb. 2013</dd>\r\n                                <dt className=\"col-6\">Major Stake Holder</dt>\r\n                                <dd className=\"col-6\">HK Fine Foods Inc.</dd>\r\n                                <dt className=\"col-6\">Last Year's Turnover</dt>\r\n                                <dd className=\"col-6\">$1,250,375</dd>\r\n                                <dt className=\"col-6\">Employees</dt>\r\n                                <dd className=\"col-6\">40</dd>\r\n                            </dl>\r\n                        </CardBody>\r\n                    </Card>\r\n                </div>\r\n                <div className=\"col-12\">\r\n                    <Card>\r\n                        <CardBody className=\"bg-faded\">\r\n                            <blockquote className=\"blockquote\">\r\n                                <p className=\"mb-0\">\r\n                                    You better cut the pizza in four pieces because I'm not hungry enough to eat six.\r\n                                </p>\r\n                                <footer className=\"blockquote-footer\">\r\n                                    Yogi Berra,\r\n                                    <cite title=\"Source Title\">\r\n                                        The Wit and Wisdom of Yogi Berra, P. Pepe, Diversion Books, 2014\r\n                                    </cite>\r\n                                </footer>\r\n                            </blockquote>\r\n                        </CardBody>\r\n                    </Card>\r\n                </div>\r\n            </div>\r\n            <div className=\"row row-content\">\r\n                <div className=\"col-12\">\r\n                    <h2>Corporate Leadership</h2>\r\n                </div>\r\n                <div className=\"col-12\">\r\n                    <Stagger in>\r\n                        <RenderLeader leaders={leaders} />\r\n                    </Stagger>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\nconst RenderLeader = ({ leaders }) => {\r\n    return leaders.map((leader) => (\r\n        <Fade in>\r\n            <Media className=\"my-5\" key={leader.id}>\r\n                <Media className=\"mx-5\" left>\r\n                    <Media object src={baseUrl + leader.image} alt=\"Generic placeholder image\" />\r\n                </Media>\r\n                <Media right body>\r\n                    <Media heading>{leader.name}</Media>\r\n                    <Media>{leader.designation}</Media>\r\n                    <Media className=\"mt-3\">{leader.description}</Media>\r\n                </Media>\r\n            </Media>\r\n        </Fade>\r\n    ));\r\n};\r\n\r\nexport default About;\r\n","import React from 'react';\r\nimport {\r\n    Card,\r\n    CardImg,\r\n    CardText,\r\n    CardBody,\r\n    CardTitle,\r\n    Breadcrumb,\r\n    BreadcrumbItem,\r\n    Modal,\r\n    ModalHeader,\r\n    ModalBody,\r\n    Button,\r\n    Row,\r\n    Col,\r\n    Label,\r\n} from 'reactstrap';\r\nimport { Control, LocalForm, Errors } from 'react-redux-form';\r\nimport { Link } from 'react-router-dom';\r\nimport { Loading } from './Loading';\r\nimport { baseUrl } from '../shared/baseUrl';\r\nimport { FadeTransform, Fade, Stagger } from 'react-animation-components';\r\n\r\nconst required = (val) => val && val.length;\r\nconst maxLength = (len) => (val) => !val || val.length <= len;\r\nconst minLength = (len) => (val) => val && val.length >= len;\r\n\r\nconst Dishdetail = ({ dish, comments, postComment, isLoading, errMess }) => {\r\n    if (isLoading) {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Loading />\r\n                </div>\r\n            </div>\r\n        );\r\n    } else if (errMess) {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <h4>{errMess}</h4>\r\n                </div>\r\n            </div>\r\n        );\r\n    } else if (dish != null) {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Breadcrumb>\r\n                        <BreadcrumbItem>\r\n                            <Link to=\"/menu\">Menu</Link>\r\n                        </BreadcrumbItem>\r\n                        <BreadcrumbItem active>{dish.name}</BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                    <div className=\"col-12\">\r\n                        <h3>{dish.name}</h3>\r\n                        <hr />\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col-12 col-md-5 m-1\">\r\n                        <RenderDish dish={dish} />\r\n                    </div>\r\n                    <div className=\"col-12 col-md-5 m-1\">\r\n                        <RenderComments comments={comments} />\r\n                        <CommentForm postComment={postComment} dishId={dish.id} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nexport default Dishdetail;\r\n\r\nconst RenderDish = ({ dish }) => {\r\n    return (\r\n        <FadeTransform\r\n            in\r\n            transformProps={{\r\n                exitTransform: 'scale(0.5) translateY(-50%)',\r\n            }}\r\n        >\r\n            <Card key={dish.id}>\r\n                <CardImg top src={baseUrl + dish.image} alt={dish.name} />\r\n                <CardBody>\r\n                    <CardTitle>{dish.name}</CardTitle>\r\n                    <CardText>{dish.description}</CardText>\r\n                </CardBody>\r\n            </Card>\r\n        </FadeTransform>\r\n    );\r\n};\r\nconst RenderComments = ({ comments }) => {\r\n    return (\r\n        <div>\r\n            <h4>Comments</h4>\r\n            <ul className=\"list-unstyled\">\r\n                <Stagger in>\r\n                    {comments.map((comment) => (\r\n                        <Fade in>\r\n                            <li key={comment.id}>\r\n                                <p>{comment.comment}</p>\r\n                                <p>\r\n                                    -- {comment.author},{' '}\r\n                                    {new Intl.DateTimeFormat('en-US', {\r\n                                        year: 'numeric',\r\n                                        month: 'short',\r\n                                        day: '2-digit',\r\n                                    }).format(new Date(Date.parse(comment.date)))}\r\n                                </p>\r\n                            </li>\r\n                        </Fade>\r\n                    ))}\r\n                </Stagger>\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nclass CommentForm extends React.Component {\r\n    state = {\r\n        isModalOpen: false,\r\n    };\r\n\r\n    toggleModal = () => {\r\n        this.setState({\r\n            isModalOpen: !this.state.isModalOpen,\r\n        });\r\n    };\r\n    handleSubmit = (values) => {\r\n        this.toggleModal();\r\n        this.props.postComment(this.props.dishId, values.rating, values.author, values.comment);\r\n    };\r\n    render() {\r\n        const { isModalOpen } = this.state;\r\n        return (\r\n            <div>\r\n                <Button outline onClick={this.toggleModal}>\r\n                    <span className=\"fa fa-pencil fa-lg\" /> Submit Comment\r\n                </Button>\r\n                <Modal isOpen={isModalOpen} toggle={this.toggleModal}>\r\n                    <ModalHeader toggle={this.toggleModal}>Submit Comment</ModalHeader>\r\n                    <ModalBody>\r\n                        <LocalForm onSubmit={(values) => this.handleSubmit(values)}>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"rating\" md={12}>\r\n                                    Rating\r\n                                </Label>\r\n                                <Col md={12}>\r\n                                    <Control.select model=\".rating\" name=\"rating\" className=\"form-control\">\r\n                                        <option>1</option>\r\n                                        <option>2</option>\r\n                                        <option>3</option>\r\n                                        <option>4</option>\r\n                                        <option>5</option>\r\n                                    </Control.select>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"author\" md={12}>\r\n                                    Your Name\r\n                                </Label>\r\n                                <Col md={12}>\r\n                                    <Control.text\r\n                                        model=\".author\"\r\n                                        id=\"author\"\r\n                                        name=\"author\"\r\n                                        placeholder=\"Your Name\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required,\r\n                                            minLength: minLength(3),\r\n                                            maxLength: maxLength(15),\r\n                                        }}\r\n                                    />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".author\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 characters',\r\n                                            maxLength: 'Must be 15 characters or less',\r\n                                        }}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"comment\" md={12}>\r\n                                    Comment\r\n                                </Label>\r\n                                <Col md={12}>\r\n                                    <Control.textarea\r\n                                        model=\".comment\"\r\n                                        id=\"comment\"\r\n                                        name=\"comment\"\r\n                                        rows=\"6\"\r\n                                        className=\"form-control\"\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={12}>\r\n                                    <Button type=\"submit\" color=\"primary\">\r\n                                        Submit\r\n                                    </Button>\r\n                                </Col>\r\n                            </Row>\r\n                        </LocalForm>\r\n                    </ModalBody>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React, { Component, Fragment } from 'react';\r\nimport {\r\n    Navbar,\r\n    NavbarBrand,\r\n    Nav,\r\n    NavbarToggler,\r\n    Collapse,\r\n    NavItem,\r\n    Jumbotron,\r\n    Button,\r\n    Modal,\r\n    ModalHeader,\r\n    ModalBody,\r\n    Form,\r\n    FormGroup,\r\n    Input,\r\n    Label,\r\n} from 'reactstrap';\r\nimport { NavLink } from 'react-router-dom';\r\nclass Header extends Component {\r\n    state = {\r\n        isNavOpen: false,\r\n        isModalOpen: false,\r\n    };\r\n\r\n    toggleNav = () => {\r\n        this.setState({\r\n            isNavOpen: !this.state.isNavOpen,\r\n        });\r\n    };\r\n    toggleModal = () => {\r\n        this.setState({\r\n            isModalOpen: !this.state.isModalOpen,\r\n        });\r\n    };\r\n    handleLogin = (event) => {\r\n        this.toggleModal();\r\n        alert(\r\n            'Username: ' +\r\n                this.username.value +\r\n                ' Password: ' +\r\n                this.password.value +\r\n                ' Remember: ' +\r\n                this.remember.checked,\r\n        );\r\n        event.preventDefault();\r\n    };\r\n    render() {\r\n        const { isModalOpen, isNavOpen } = this.state;\r\n        return (\r\n            <Fragment>\r\n                <Navbar dark expand=\"md\">\r\n                    <div className=\"container\">\r\n                        <NavbarToggler onClick={this.toggleNav} />\r\n                        <NavbarBrand className=\"mr-auto\" href=\"/\">\r\n                            <img src=\"assets/images/logo.png\" height=\"30\" width=\"41\" alt=\"Ristorante Con Fusion\" />\r\n                        </NavbarBrand>\r\n                        <Collapse isOpen={isNavOpen} navbar>\r\n                            <Nav className=\"ml-auto\" navbar>\r\n                                <NavItem>\r\n                                    <NavLink className=\"nav-link\" to=\"/home\">\r\n                                        <span className=\"fa fa-home fa-lg\" /> Home\r\n                                    </NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink className=\"nav-link\" to=\"/aboutus\">\r\n                                        <span className=\"fa fa-info fa-lg\" /> About Us\r\n                                    </NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink className=\"nav-link\" to=\"/menu\">\r\n                                        <span className=\"fa fa-list fa-lg\" /> Menu\r\n                                    </NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink className=\"nav-link\" to=\"/contactus\">\r\n                                        <span className=\"fa fa-address-card fa-lg\" /> Contact Us\r\n                                    </NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <Button outline onClick={this.toggleModal}>\r\n                                        <span className=\"fa fa-sign-in fa-lg\" /> Login\r\n                                    </Button>\r\n                                </NavItem>\r\n                            </Nav>\r\n                        </Collapse>\r\n                    </div>\r\n                </Navbar>\r\n                <Jumbotron>\r\n                    <div className=\"container\">\r\n                        <div className=\"row row-header\">\r\n                            <div className=\"col-12 col-sm-6\">\r\n                                <h1>Ristorante con Fusion</h1>\r\n                                <p>\r\n                                    We take inspiration from the World's best cuisines, and create a unique fusion\r\n                                    experience. Our lipsmacking creations will tickle your culinary senses!\r\n                                </p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </Jumbotron>\r\n                <Modal isOpen={isModalOpen} toggle={this.toggleModal}>\r\n                    <ModalHeader toggle={this.toggleModal}>Login</ModalHeader>\r\n                    <ModalBody>\r\n                        <Form onSubmit={this.handleLogin}>\r\n                            <FormGroup>\r\n                                <Label htmlFor=\"username\">Username</Label>\r\n                                <Input\r\n                                    type=\"text\"\r\n                                    id=\"username\"\r\n                                    name=\"username\"\r\n                                    innerRef={(input) => (this.username = input)}\r\n                                />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Label htmlFor=\"password\">Password</Label>\r\n                                <Input\r\n                                    type=\"password\"\r\n                                    id=\"password\"\r\n                                    name=\"password\"\r\n                                    innerRef={(input) => (this.password = input)}\r\n                                />\r\n                            </FormGroup>\r\n                            <FormGroup check>\r\n                                <Label check>\r\n                                    <Input\r\n                                        type=\"checkbox\"\r\n                                        name=\"remember\"\r\n                                        innerRef={(input) => (this.remember = input)}\r\n                                    />\r\n                                    Remember me\r\n                                </Label>\r\n                            </FormGroup>\r\n                            <Button type=\"submit\" value=\"submit\" color=\"primary\">\r\n                                Login\r\n                            </Button>\r\n                        </Form>\r\n                    </ModalBody>\r\n                </Modal>\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Header;\r\n","import React, { Component } from 'react';\r\nimport { Breadcrumb, BreadcrumbItem, Button, Row, Col, Label } from 'reactstrap';\r\nimport { Control, Form, Errors } from 'react-redux-form';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst required = (val) => val && val.length;\r\nconst maxLength = (len) => (val) => !val || val.length <= len;\r\nconst minLength = (len) => (val) => val && val.length >= len;\r\nconst isNumber = (val) => !isNaN(Number(val));\r\nconst validEmail = (val) => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\r\n\r\nclass Contact extends Component {\r\n    handleSubmit = (values) => {\r\n        this.props.resetFeedbackForm();\r\n        this.props.postFeedback(values);\r\n    };\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Breadcrumb>\r\n                        <BreadcrumbItem>\r\n                            <Link to=\"/home\">Home</Link>\r\n                        </BreadcrumbItem>\r\n                        <BreadcrumbItem active>Contact Us</BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                    <div className=\"col-12\">\r\n                        <h3>Contact Us</h3>\r\n                        <hr />\r\n                    </div>\r\n                </div>\r\n                <div className=\"row row-content\">\r\n                    <div className=\"col-12\">\r\n                        <h3>Location Information</h3>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-4 offset-sm-1\">\r\n                        <h5>Our Address</h5>\r\n                        <address>\r\n                            121, Clear Water Bay Road<br />\r\n                            Clear Water Bay, Kowloon<br />\r\n                            HONG KONG<br />\r\n                            <i className=\"fa fa-phone\" />: +852 1234 5678<br />\r\n                            <i className=\"fa fa-fax\" />: +852 8765 4321<br />\r\n                            <i className=\"fa fa-envelope\" />: <a href=\"mailto:confusion@food.net\">confusion@food.net</a>\r\n                        </address>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-6 offset-sm-1\">\r\n                        <h5>Map of our Location</h5>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-11 offset-sm-1\">\r\n                        <div className=\"btn-group\" role=\"group\">\r\n                            <a role=\"button\" className=\"btn btn-primary\" href=\"tel:+85212345678\">\r\n                                <i className=\"fa fa-phone\" /> Call\r\n                            </a>\r\n                            <a role=\"button\" className=\"btn btn-info\">\r\n                                <i className=\"fa fa-skype\" /> Skype\r\n                            </a>\r\n                            <a role=\"button\" className=\"btn btn-success\" href=\"mailto:confusion@food.net\">\r\n                                <i className=\"fa fa-envelope-o\" /> Email\r\n                            </a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row row-content\">\r\n                    <div className=\"col-12\">\r\n                        <h3>Send us your Feedback</h3>\r\n                    </div>\r\n                    <div className=\"col-12 col-md-9\">\r\n                        <Form model=\"feedback\" onSubmit={(values) => this.handleSubmit(values)}>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"firstname\" md={2}>\r\n                                    First Name\r\n                                </Label>\r\n                                <Col md={10}>\r\n                                    <Control.text\r\n                                        model=\".firstname\"\r\n                                        id=\"firstname\"\r\n                                        name=\"firstname\"\r\n                                        placeholder=\"First Name\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required,\r\n                                            minLength: minLength(3),\r\n                                            maxLength: maxLength(15),\r\n                                        }}\r\n                                    />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".firstname\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 characters',\r\n                                            maxLength: 'Must be 15 characters or less',\r\n                                        }}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"lastname\" md={2}>\r\n                                    Last Name\r\n                                </Label>\r\n                                <Col md={10}>\r\n                                    <Control.text\r\n                                        model=\".lastname\"\r\n                                        id=\"lastname\"\r\n                                        name=\"lastname\"\r\n                                        placeholder=\"Last Name\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required,\r\n                                            minLength: minLength(3),\r\n                                            maxLength: maxLength(15),\r\n                                        }}\r\n                                    />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".lastname\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 characters',\r\n                                            maxLength: 'Must be 15 characters or less',\r\n                                        }}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"telnum\" md={2}>\r\n                                    Contact Tel.\r\n                                </Label>\r\n                                <Col md={10}>\r\n                                    <Control.text\r\n                                        model=\".telnum\"\r\n                                        id=\"telnum\"\r\n                                        name=\"telnum\"\r\n                                        placeholder=\"Tel. Number\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required,\r\n                                            minLength: minLength(3),\r\n                                            maxLength: maxLength(15),\r\n                                            isNumber,\r\n                                        }}\r\n                                    />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".telnum\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 numbers',\r\n                                            maxLength: 'Must be 15 numbers or less',\r\n                                            isNumber: 'Must be a number',\r\n                                        }}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"email\" md={2}>\r\n                                    Email\r\n                                </Label>\r\n                                <Col md={10}>\r\n                                    <Control.text\r\n                                        model=\".email\"\r\n                                        id=\"email\"\r\n                                        name=\"email\"\r\n                                        placeholder=\"Email\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required,\r\n                                            validEmail,\r\n                                        }}\r\n                                    />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".email\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            validEmail: 'Invalid Email Address',\r\n                                        }}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{ size: 6, offset: 2 }}>\r\n                                    <div className=\"form-check\">\r\n                                        <Label check>\r\n                                            <Control.checkbox\r\n                                                model=\".agree\"\r\n                                                name=\"agree\"\r\n                                                className=\"form-check-input\"\r\n                                            />\r\n                                            <strong>May we contact you?</strong>\r\n                                        </Label>\r\n                                    </div>\r\n                                </Col>\r\n                                <Col md={{ size: 3, offset: 1 }}>\r\n                                    <Control.select model=\".contactType\" name=\"contactType\" className=\"form-control\">\r\n                                        <option>Tel.</option>\r\n                                        <option>Email</option>\r\n                                    </Control.select>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"message\" md={2}>\r\n                                    Your Feedback\r\n                                </Label>\r\n                                <Col md={10}>\r\n                                    <Control.textarea\r\n                                        model=\".message\"\r\n                                        id=\"message\"\r\n                                        name=\"message\"\r\n                                        rows=\"12\"\r\n                                        className=\"form-control\"\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{ size: 10, offset: 2 }}>\r\n                                    <Button type=\"submit\" color=\"primary\">\r\n                                        Send Feedback\r\n                                    </Button>\r\n                                </Col>\r\n                            </Row>\r\n                        </Form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Contact;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction Footer(props) {\r\n    return (\r\n        <div className=\"footer\">\r\n            <div className=\"container\">\r\n                <div className=\"row justify-content-center\">\r\n                    <div className=\"col-4 offset-1 col-sm-2\">\r\n                        <h5>Links</h5>\r\n                        <ul className=\"list-unstyled\">\r\n                            <li>\r\n                                <Link to=\"/home\">Home</Link>\r\n                            </li>\r\n                            <li>\r\n                                <Link to=\"/aboutus\">About Us</Link>\r\n                            </li>\r\n                            <li>\r\n                                <Link to=\"/menu\">Menu</Link>\r\n                            </li>\r\n                            <li>\r\n                                <Link to=\"/contactus\">Contact Us</Link>\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                    <div className=\"col-7 col-sm-5\">\r\n                        <h5>Our Address</h5>\r\n                        <address>\r\n                            121, Clear Water Bay Road<br />\r\n                            Clear Water Bay, Kowloon<br />\r\n                            HONG KONG<br />\r\n                            <i className=\"fa fa-phone fa-lg\" />: +852 1234 5678<br />\r\n                            <i className=\"fa fa-fax fa-lg\" />: +852 8765 4321<br />\r\n                            <i className=\"fa fa-envelope fa-lg\" />:{' '}\r\n                            <a href=\"mailto:confusion@food.net\">confusion@food.net</a>\r\n                        </address>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-4 align-self-center\">\r\n                        <div className=\"text-center\">\r\n                            <a className=\"btn btn-social-icon btn-google\" href=\"http://google.com/+\">\r\n                                <i className=\"fa fa-google-plus\" />\r\n                            </a>\r\n                            <a\r\n                                className=\"btn btn-social-icon btn-facebook\"\r\n                                href=\"http://www.facebook.com/profile.php?id=\"\r\n                            >\r\n                                <i className=\"fa fa-facebook\" />\r\n                            </a>\r\n                            <a className=\"btn btn-social-icon btn-linkedin\" href=\"http://www.linkedin.com/in/\">\r\n                                <i className=\"fa fa-linkedin\" />\r\n                            </a>\r\n                            <a className=\"btn btn-social-icon btn-twitter\" href=\"http://twitter.com/\">\r\n                                <i className=\"fa fa-twitter\" />\r\n                            </a>\r\n                            <a className=\"btn btn-social-icon btn-google\" href=\"http://youtube.com/\">\r\n                                <i className=\"fa fa-youtube\" />\r\n                            </a>\r\n                            <a className=\"btn btn-social-icon\" href=\"mailto:\">\r\n                                <i className=\"fa fa-envelope-o\" />\r\n                            </a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row justify-content-center\">\r\n                    <div className=\"col-auto\">\r\n                        <p>© Copyright 2018 Ristorante Con Fusion</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Footer;\r\n","import * as ActionTypes from './ActionTypes';\r\nimport { baseUrl } from '../shared/baseUrl';\r\n\r\nexport const addComment = (comment) => ({\r\n    type: ActionTypes.ADD_COMMENT,\r\n    payload: comment,\r\n});\r\nexport const postComment = (dishId, rating, author, comment) => (dispatch) => {\r\n    const newComment = {\r\n        dishId,\r\n        rating,\r\n        author,\r\n        comment,\r\n    };\r\n    newComment.date = new Date().toISOString();\r\n    return fetch(baseUrl + 'comments', {\r\n        method: 'POST',\r\n        body: JSON.stringify(newComment),\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n        },\r\n        credentials: 'same-origin',\r\n    })\r\n        .then(\r\n            (response) => {\r\n                if (response.ok) {\r\n                    return response;\r\n                } else {\r\n                    var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n                    error.response = response;\r\n                    throw error;\r\n                }\r\n            },\r\n            (error) => {\r\n                throw error;\r\n            },\r\n        )\r\n        .then((response) => response.json())\r\n        .then((response) => dispatch(addComment(response)))\r\n        .catch((error) => {\r\n            console.log('post comments', error.message);\r\n            alert('Your comment could not be posted\\nError: ' + error.message);\r\n        });\r\n};\r\n\r\n// Dishes actions\r\nexport const fetchDishes = () => (dispatch) => {\r\n    dispatch(dishesLoading(true));\r\n    return fetch(baseUrl + 'dishes')\r\n        .then(\r\n            (response) => {\r\n                if (response.ok) {\r\n                    return response;\r\n                } else {\r\n                    const error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n                    error.response = response;\r\n                    throw error;\r\n                }\r\n            },\r\n            (error) => {\r\n                const errmess = new Error(error.message);\r\n                throw errmess;\r\n            },\r\n        )\r\n        .then((response) => response.json())\r\n        .then((dishes) => dispatch(addDishes(dishes)))\r\n        .catch((error) => dispatch(dishesFailed(error.message)));\r\n};\r\nexport const dishesLoading = () => ({\r\n    type: ActionTypes.DISHES_LOADING,\r\n});\r\n\r\nexport const dishesFailed = (errmess) => ({\r\n    type: ActionTypes.DISHES_FAILED,\r\n    payload: errmess,\r\n});\r\n\r\nexport const addDishes = (dishes) => ({\r\n    type: ActionTypes.ADD_DISHES,\r\n    payload: dishes,\r\n});\r\n\r\n// Comments actions\r\nexport const fetchComments = () => (dispatch) => {\r\n    return fetch(baseUrl + 'comments')\r\n        .then(\r\n            (response) => {\r\n                if (response.ok) {\r\n                    return response;\r\n                } else {\r\n                    const error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n                    error.response = response;\r\n                    throw error;\r\n                }\r\n            },\r\n            (error) => {\r\n                const errmess = new Error(error.message);\r\n                throw errmess;\r\n            },\r\n        )\r\n        .then((response) => response.json())\r\n        .then((comments) => dispatch(addComments(comments)))\r\n        .catch((error) => dispatch(commentsFailed(error.message)));\r\n};\r\n\r\nexport const commentsFailed = (errmess) => ({\r\n    type: ActionTypes.COMMENTS_FAILED,\r\n    payload: errmess,\r\n});\r\nexport const addComments = (comments) => ({\r\n    type: ActionTypes.ADD_COMMENTS,\r\n    payload: comments,\r\n});\r\n\r\n// Promotions actions\r\n\r\nexport const fetchPromos = () => (dispatch) => {\r\n    dispatch(promosLoading(true));\r\n\r\n    return fetch(baseUrl + 'promotions')\r\n        .then(\r\n            (response) => {\r\n                if (response.ok) {\r\n                    return response;\r\n                } else {\r\n                    const error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n                    error.response = response;\r\n                    throw error;\r\n                }\r\n            },\r\n            (error) => {\r\n                const errmess = new Error(error.message);\r\n                throw errmess;\r\n            },\r\n        )\r\n        .then((response) => response.json())\r\n        .then((promos) => dispatch(addPromos(promos)))\r\n        .catch((error) => dispatch(promosFailed(error.message)));\r\n};\r\n\r\nexport const promosLoading = () => (dispatch) => ({\r\n    type: ActionTypes.PROMOS_LOADING,\r\n});\r\n\r\nexport const promosFailed = (errmess) => ({\r\n    type: ActionTypes.PROMOS_FAILED,\r\n    payload: errmess,\r\n});\r\n\r\nexport const addPromos = (promos) => ({\r\n    type: ActionTypes.ADD_PROMOS,\r\n    payload: promos,\r\n});\r\n\r\n// Leaders actions\r\nexport const fetchLeaders = () => (dispatch) => {\r\n    dispatch(leadersLoading());\r\n\r\n    return fetch(baseUrl + 'leaders')\r\n        .then(\r\n            (response) => {\r\n                if (response.ok) {\r\n                    return response;\r\n                } else {\r\n                    const error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n                    error.response = response;\r\n                    throw error;\r\n                }\r\n            },\r\n            (error) => {\r\n                const errmess = new Error(error.message);\r\n                throw errmess;\r\n            },\r\n        )\r\n        .then((response) => response.json())\r\n        .then((leaders) => dispatch(addLeaders(leaders)))\r\n        .catch((error) => dispatch(leadersFailed(error.message)));\r\n};\r\n\r\nexport const leadersLoading = () => ({\r\n    type: ActionTypes.LEADERS_LOADING,\r\n});\r\n\r\nexport const leadersFailed = (errmess) => ({\r\n    type: ActionTypes.LEADERS_FAILED,\r\n    payload: errmess,\r\n});\r\n\r\nexport const addLeaders = (Leaders) => ({\r\n    type: ActionTypes.ADD_LEADERS,\r\n    payload: Leaders,\r\n});\r\n\r\n// send feedback\r\nexport const postFeedback = (feedback) => (dispatch) => {\r\n    const newFeedback = Object.assign({ date: new Date().toISOString() }, feedback);\r\n\r\n    return fetch(baseUrl + 'feedback', {\r\n        method: 'POST',\r\n        body: JSON.stringify(newFeedback),\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n        },\r\n        credentials: 'same-origin',\r\n    })\r\n        .then(\r\n            (response) => {\r\n                if (response.ok) {\r\n                    return response;\r\n                } else {\r\n                    var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n                    error.response = response;\r\n\r\n                    throw error;\r\n                }\r\n            },\r\n            (error) => {\r\n                var errorMessage = new Error(error.errorMessage);\r\n                throw errorMessage;\r\n            },\r\n        )\r\n        .then((response) => response.json())\r\n        .then((response) => alert(JSON.stringify(response)))\r\n        .catch((error) => {\r\n            console.log('Post feedback: ' + error.message);\r\n            alert('Feedback could not be posted:\\n' + error.message);\r\n        });\r\n};\r\n","export const ADD_COMMENT = 'ADD_COMMENT';\r\nexport const DISHES_LOADING = 'DISHES_LOADING';\r\nexport const DISHES_FAILED = 'DISHES_FAILED';\r\nexport const ADD_DISHES = 'ADD_DISHES';\r\nexport const ADD_COMMENTS = 'ADD_COMMENTS';\r\nexport const COMMENTS_FAILED = 'COMMENTS_FAILED';\r\nexport const PROMOS_LOADING = 'PROMOS_LOADING';\r\nexport const ADD_PROMOS = 'ADD_PROMOS';\r\nexport const PROMOS_FAILED = 'PROMOS_FAILED';\r\nexport const LEADERS_LOADING = 'LEADERS_LOADING';\r\nexport const LEADERS_FAILED = 'LEADERS_FAILED';\r\nexport const ADD_LEADERS = 'ADD_LEADERS';\r\n","import React from 'react';\r\nimport Menu from './Menu';\r\nimport Home from './Home';\r\nimport About from './About';\r\nimport Dishdetail from './Dishdetail';\r\nimport Header from './Header';\r\nimport Contact from './Contact';\r\nimport Footer from './Footer';\r\nimport { Switch, Redirect, Route, withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n    fetchDishes,\r\n    fetchComments,\r\n    fetchPromos,\r\n    fetchLeaders,\r\n    postComment,\r\n    postFeedback,\r\n} from '../redux/ActionCreators';\r\nimport { actions } from 'react-redux-form';\r\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        dishes: state.dishes,\r\n        comments: state.comments,\r\n        promotions: state.promotions,\r\n        leaders: state.leaders,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    postComment: (dishId, rating, author, comment) => dispatch(postComment(dishId, rating, author, comment)),\r\n    fetchDishes: () => dispatch(fetchDishes()),\r\n    fetchPromos: () => dispatch(fetchPromos()),\r\n    fetchComments: () => dispatch(fetchComments()),\r\n    fetchLeaders: () => dispatch(fetchLeaders()),\r\n    postFeedback: (feedback) => dispatch(postFeedback(feedback)),\r\n    resetFeedbackForm: () => dispatch(actions.reset('feedback')),\r\n});\r\n\r\nclass Main extends React.Component {\r\n    componentDidMount() {\r\n        this.props.fetchDishes();\r\n        this.props.fetchComments();\r\n        this.props.fetchPromos();\r\n        this.props.fetchLeaders();\r\n    }\r\n\r\n    render() {\r\n        const { dishes, promotions, leaders, comments, postComment, resetFeedbackForm, postFeedback } = this.props;\r\n        const HomePage = () => {\r\n            return (\r\n                <Home\r\n                    dish={dishes.dishes.filter((dish) => dish.featured)[0]}\r\n                    dishesLoading={dishes.isLoading}\r\n                    dishesErrMess={dishes.errMess}\r\n                    promotion={promotions.promotions.filter((promo) => promo.featured)[0]}\r\n                    promosLoading={promotions.isLoading}\r\n                    promosErrMess={promotions.errMess}\r\n                    leader={leaders.leaders.filter((leader) => leader.featured)[0]}\r\n                    leadersLoading={leaders.isLoading}\r\n                    leadersErrMess={leaders.errMess}\r\n                />\r\n            );\r\n        };\r\n\r\n        const DishWithId = ({ match }) => {\r\n            return (\r\n                <Dishdetail\r\n                    dish={dishes.dishes.filter((dish) => dish.id === parseInt(match.params.dishId, 10))[0]}\r\n                    isLoading={dishes.isLoading}\r\n                    errMess={dishes.errMess}\r\n                    comments={comments.comments.filter(\r\n                        (comment) => comment.dishId === parseInt(match.params.dishId, 10),\r\n                    )}\r\n                    commentsErrMess={comments.errMess}\r\n                    postComment={postComment}\r\n                />\r\n            );\r\n        };\r\n        return (\r\n            <div>\r\n                <Header />\r\n                <div className=\"container\">\r\n                    <TransitionGroup>\r\n                        <CSSTransition key={this.props.location.key} classNames=\"page\" timeout={300}>\r\n                            <Switch>\r\n                                <Route path=\"/home\" component={HomePage} />\r\n                                <Route exact path=\"/aboutus\" component={() => <About leaders={leaders.leaders} />} />\r\n                                <Route exact path=\"/menu\" component={() => <Menu dishes={dishes} />} />\r\n                                <Route path=\"/menu/:dishId\" component={DishWithId} />\r\n                                <Route\r\n                                    exact\r\n                                    path=\"/contactus\"\r\n                                    component={() => (\r\n                                        <Contact postFeedback={postFeedback} resetFeedbackForm={resetFeedbackForm} />\r\n                                    )}\r\n                                />\r\n                                <Redirect to=\"/home\" />\r\n                            </Switch>\r\n                        </CSSTransition>\r\n                    </TransitionGroup>\r\n                </div>\r\n                <Footer />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Main));\r\n","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Dishes = (\r\n    state = {\r\n        isLoading: true,\r\n        errMess: null,\r\n        dishes: [],\r\n    },\r\n    action,\r\n) => {\r\n    switch (action.type) {\r\n        case ActionTypes.ADD_DISHES:\r\n            return { ...state, isLoading: false, errMess: null, dishes: action.payload };\r\n\r\n        case ActionTypes.DISHES_LOADING:\r\n            return { ...state, isLoading: true, errMess: null, dishes: [] };\r\n\r\n        case ActionTypes.DISHES_FAILED:\r\n            return { ...state, isLoading: false, errMess: action.payload };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Comments = (\r\n    state = {\r\n        errMess: null,\r\n        comments: [],\r\n    },\r\n    action,\r\n) => {\r\n    switch (action.type) {\r\n        case ActionTypes.ADD_COMMENTS:\r\n            return { ...state, errMess: null, comments: action.payload };\r\n        case ActionTypes.COMMENTS_FAILED:\r\n            return { ...state, errMess: action.payload };\r\n        case ActionTypes.ADD_COMMENT:\r\n            var comment = action.payload;\r\n            return { ...state, comments: state.comments.concat(comment) };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Promotions = (\r\n    state = {\r\n        isLoading: true,\r\n        errMess: null,\r\n        promotions: [],\r\n    },\r\n    action,\r\n) => {\r\n    switch (action.type) {\r\n        case ActionTypes.ADD_PROMOS:\r\n            return { ...state, isLoading: false, errMess: null, promotions: action.payload };\r\n        case ActionTypes.PROMOS_LOADING:\r\n            return { ...state, isLoading: true, errMess: null, promotions: [] };\r\n        case ActionTypes.PROMOS_FAILED:\r\n            return { ...state, isLoading: false, errMess: action.payload, promotions: [] };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Leaders = (\r\n    state = {\r\n        isLoading: true,\r\n        errMess: null,\r\n        leaders: [],\r\n    },\r\n    action,\r\n) => {\r\n    switch (action.type) {\r\n        case ActionTypes.ADD_LEADERS:\r\n            return { ...state, isLoading: false, errMess: null, leaders: action.payload };\r\n\r\n        case ActionTypes.LEADERS_LOADING:\r\n            return { ...state, isLoading: true, errMess: null, leaders: [] };\r\n\r\n        case ActionTypes.LEADERS_FAILED:\r\n            return { ...state, isLoading: false, errMess: action.payload, leaders: [] };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","export const InitialFeedback = {\r\n    firstname: '',\r\n    lastname: '',\r\n    telnum: '',\r\n    email: '',\r\n    agree: false,\r\n    contactType: 'Tel.',\r\n    message: '',\r\n};\r\n","import React from 'react';\r\n\r\nimport './App.css';\r\nimport Main from './components/Main';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { ConfigureStore } from './redux/configureStore';\r\nconst store = ConfigureStore();\r\nconst App = () => {\r\n    return (\r\n        <Provider store={store}>\r\n            <BrowserRouter>\r\n                <Main />\r\n            </BrowserRouter>\r\n        </Provider>\r\n    );\r\n};\r\n\r\nexport default App;\r\n","import { createStore, combineReducers, applyMiddleware } from 'redux';\r\nimport { Dishes } from './dishes';\r\nimport { Comments } from './comments';\r\nimport { Promotions } from './promotions';\r\nimport { Leaders } from './leaders';\r\nimport thunk from 'redux-thunk';\r\nimport logger from 'redux-logger';\r\nimport { createForms } from 'react-redux-form';\r\nimport { InitialFeedback } from './forms';\r\n\r\nexport const ConfigureStore = () => {\r\n    const store = createStore(\r\n        combineReducers({\r\n            dishes: Dishes,\r\n            comments: Comments,\r\n            promotions: Promotions,\r\n            leaders: Leaders,\r\n            ...createForms({\r\n                feedback: InitialFeedback,\r\n            }),\r\n        }),\r\n        applyMiddleware(thunk, logger),\r\n    );\r\n    return store;\r\n};\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport 'font-awesome/css/font-awesome.css';\r\nimport 'bootstrap-social/bootstrap-social.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}